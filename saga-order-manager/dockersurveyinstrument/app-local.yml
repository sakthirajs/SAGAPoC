version: '3'

services:
  rabbitmq-poc:
    container_name: rabbitmq-poc
    restart: always
    image: rabbitmq:3-management
#    build:
#      context: ../
#      dockerfile: Dockerfile-rabbit
    ports:
      - '15676:15672'
      - '5676:5672'
#    volumes:
#      - type: bind
#        source: ../rabbitmq-enabled-plugins
#        target: /etc/rabbitmq/enabled_plugins
#      - type: bind
#        source: ../rabbitmq.config
#        target: /etc/rabbitmq/rabbitmq.config
#      - type: bind
#        source: ../rabbitmq-defs.json
#        target: /etc/rabbitmq/rabbitmq-defs.json

  lra-service:
    container_name: lra-service
    restart: always
    image: quay.io/jbosstm/lra-coordinator:latest
    ports:
      - '8088:8080'

  saga-order-manager:
    container_name: saga-order-manager
    restart: always
    build:
      context: ../
      dockerfile: Dockerfile
    environment:
      - RABBITMQ_PASSWORD:guest
      - RABBITMQ_USERNAME:guest
      - RABBITMQ_HOST:rabbitmq-poc
      - RABBITMQ_PORT:5672
      - COORDINATOR_SERVICE_PROTO=http
      - COORDINATOR_SERVICE_HOST=lra-service
      - COORDINATOR_SERVICE_PORT=8080
      - LOCAL_PARTICIPANT_URL_PROTO=http
      - LOCAL_PARTICIPANT_URL_HOST=saga-order-manager
      - LOCAL_PARTICIPANT_URL_PORT=9080
    ports:
      - '9080:8080'
    command: mvn clean spring-boot:run
    expose:
      - '8080'

volumes:
  data: {}